from tensorflow.keras.layers import Dense, Input
from tensorflow.keras.models import Model
from tensorflow.keras.applications import DenseNet169

class_names = ['normal',
             'cardiomegaly',
             'pulmonary_artery',
             'pulmonary_disease',
             'bullous_emphysema',
             'pulmonary_fibrosis',
             'cicatrix',
             'opacity',
             'osteophyte',
             'thickening',
             'lung',
             'pulmonary_atelectasis',
             'spondylosis',
             'arthritis',
             'calcified_granuloma',
             'density',
             'cardiac_shadow',
             'markings',
             'granulomatous_disease',
             'pleural_effusion',
             'aorta',
             'thoracic_vertebrae',
             'breast_implants',
             'deformity',
             'sutures',
             'pulmonary_emphysema',
             'airspace_disease',
             'diaphragm',
             'consolidation',
             'pulmonary_congestion',
             'tube',
             'costophrenic_angle',
             'surgical_instruments',
             'emphysema',
             'no_indexing',
             'volume_loss',
             'lung_diseases',
             'stents',
             'nodule',
             'bone_and_bones',
             'spine',
             'scoliosis',
             'hernia',
             'mass',
             'calcinosis',
             'technical_quality_of_image_unsatisfactory_',
             'pneumothorax',
             'atherosclerosis',
             'kyphosis',
             'osteoporosis',
             'implanted_medical_device',
             'bone_diseases',
             'heart_failure',
             'shift',
             'foreign_bodies',
             'dislocations',
             'shoulder',
             'mediastinum',
             'catheters',
             'spinal_fusion',
             'infiltrate',
             'expansile_bone_lesions',
             'fractures',
             'lumbar_vertebrae',
             'diaphragmatic_eventration',
             'pulmonary_edema',
             'subcutaneous_emphysema',
             'pneumonia',
             'medical_device',
             'lucency',
             'sclerosis',
             'cysts',
             'granuloma',
             'funnel_chest',
             'epicardial_fat',
             'blister',
             'heart',
             'bronchiectasis',
             'mastectomy',
             'pneumoperitoneum',
             'aortic_aneurysm',
             'cervical_vertebrae',
             'heart_atria',
             'adipose_tissue',
             'trachea',
             'sulcus',
             'hypertension',
             'cystic_fibrosis',
             'humerus',
             'nipple_shadow',
             'hydropneumothorax',
             'pectus_carinatum',
             'fibrosis',
             'tuberculosis',
             'sarcoidosis',
             'colonic_interposition',
             'cholelithiasis',
             'ribs',
             'pleura',
             'hyperostosis',
             'heart_ventricles',
             'pneumonectomy',
             'pericardial_effusion',
             'bronchitis',
             'thorax',
             'contrast_media',
             'hypovolemia',
             'abdomen',
             'lymph_nodes',
             'cavitation',
             'hemopneumothorax',
             'subcutaneous__emphysema',
             'bronchiolitis',
             'blood_vessels',
             'hemothorax']

def get_model(class_names,
              weights_path,
              input_shape=(256, 256, 3)):

    img_input = Input(shape=input_shape)
    base_model = DenseNet169(
        include_top=False,
        input_tensor=img_input,
        input_shape=input_shape,
        weights=None,
        pooling="avg")
    x = base_model.output
    predictions = Dense(len(class_names), activation="sigmoid", name="predictions")(x)
    model = Model(inputs=img_input, outputs=predictions)

    model.load_weights(weights_path)
    return model

#model = get_model(class_names, "outs/outputIndiana/best_weights.h5")
#model.summary()
